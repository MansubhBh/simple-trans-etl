apply plugin: 'java'
apply plugin: 'idea'
apply from: "$projectDir/coverage.gradle"

buildscript {
    ext {
        junitPlatformVersion = '1.3.2'
        junitJupiterVersion = '5.3.2'
        jacksonVersion = ' 2.9.8'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.6.2"
    }
}
group 'TransactionEtl'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    maven {
        url 'http://repo1.maven.org/maven2'
    }
}


dependencies {
    compile "com.opencsv:opencsv:5.0"
    compile("ch.qos.logback:logback-core:1.2.3")
    compile("org.slf4j:slf4j-api:1.7.25")

    def junitPlatformModules = [
            "junit-platform-commons",
            "junit-platform-engine",
            "junit-platform-runner",
    ]

    junitPlatformModules.each { name ->
        testCompile("org.junit.platform:$name:$junitPlatformVersion")
    }

    def junitVintageModules = [
            "junit-jupiter-api",
            "junit-jupiter-engine",
            "junit-jupiter-params",
    ]
    junitVintageModules.each { name ->
        testCompile "org.junit.jupiter:$name:$junitJupiterVersion"
    }
    testCompile "org.junit.vintage:junit-vintage-engine:$junitJupiterVersion"
    testCompile("org.junit.platform:junit-platform-runner:$junitPlatformVersion"){
        exclude module: "junit"
    }
    testCompile "org.mockito:mockito-core:2.23.4"
}

apply plugin: "org.sonarqube"
sonarqube {
    properties {
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.source", "src"
        property "sonar.projectKey", "tran-etl"
        property "sonar.projectName", "transactionetl"
        property "sonar.host.url", "http://localhost:9000"
        property "sonar.language", "java"
        property "sonar.core.codeCoveragePlugin", "jacoco"
        property "sonar.jacoco.reportPath", "${buildDir}/jacoco/jacocoTest.exec"
        property "sonar.junit.reportsPath", "${buildDir}/test-results"
        property "sonar.exclusions", ["src/test/java/**"]
    }
}

task runsonar(dependsOn: ['build', 'jacocoTestReport', 'sonarqube']){}

